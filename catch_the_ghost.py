# -*- coding: utf-8 -*-
"""catch the ghost.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1D4bo4lX7oVkImgoSOlNKq9xBfIlP40hX
"""

! pip install imagehash pillow

import os
import json
import imagehash
from PIL import Image
import smtplib
from email.mime.text import MIMEText

DB_FILE = 'database.json'
PHOTO_FOLDER = '/content/'

def load_database():
    if not os.path.exists(DB_FILE):
        return []
    with open(DB_FILE, 'r') as f:
        return json.load(f)

def save_database(data):
    with open(DB_FILE, 'w') as f:
        json.dump(data, f, indent=2)

def get_image_hash(image_path):
    with Image.open(image_path) as img:
        return str(imagehash.phash(img))

def find_duplicates(database, new_entry):
    dupes_same_order = []
    dupes_cross_order = []
    for entry in database:
        if entry['hash'] == new_entry['hash']:
            if entry['order_id'] == new_entry['order_id']:
                dupes_same_order.append(entry)
            else:
                dupes_cross_order.append(entry)
    return dupes_same_order, dupes_cross_order

def send_email(subject, body):
    msg = MIMEText(body)
    msg['Subject'] = subject
    msg['From'] = 'at46418@gmail.com'
    msg['To'] = 'at46418@gmail.com'

    # Example: Print instead of send
    print("\n--- EMAIL ALERT ---")
    print(f"Subject: {subject}")
    print(body)
    print("-------------------\n")

def scan_folder():
    database = load_database()
    for filename in os.listdir(PHOTO_FOLDER):
        if filename.endswith(('.jpg', '.png', '.jpeg')):
            order_id, photo_id = filename.split('.')[0].split('_')
            image_path = os.path.join(PHOTO_FOLDER, filename)
            image_hash = get_image_hash(image_path)

            new_entry = {
                "order_id": order_id,
                "photo_id": photo_id,
                "hash": image_hash
            }

            dupes_same, dupes_cross = find_duplicates(database, new_entry)

            if dupes_same:
                photo_ids = [d['photo_id'] for d in dupes_same] + [photo_id]
                body = f"Duplicate detected **within** order {order_id}.\nPhoto IDs: {photo_ids}"
                send_email(f"Duplicate in Order {order_id}", body)

            if dupes_cross:
                order_ids = list({d['order_id'] for d in dupes_cross} | {order_id})
                body = f"Duplicate detected **across** orders.\nOrders: {order_ids}\nMatching Photo ID: {photo_id}"
                send_email(f"Cross-order Duplicate Found", body)

            # Save new entry to database
            database.append(new_entry)

    save_database(database)

if __name__ == '__main__':
    scan_folder()

